using System;
using System.Globalization;
using System.Windows.Forms;
namespace RawInput
{
	public static class KeyMapper
	{
		public static string GetKeyName(int value)
		{
			int num = value;
			if (num <= 65536)
			{
				switch (num)
				{
				case 0:
					return "None";
				case 1:
					return "LButton";
				case 2:
					return "RButton";
				case 3:
					return "Cancel";
				case 4:
					return "MButton";
				case 5:
					return "XButton1";
				case 6:
					return "XButton2";
				case 7:
				case 11:
				case 14:
				case 15:
				case 22:
				case 26:
				case 58:
				case 59:
				case 60:
				case 61:
				case 62:
				case 63:
				case 64:
				case 94:
				case 95:
				case 136:
				case 137:
				case 138:
				case 139:
				case 140:
				case 141:
				case 142:
				case 143:
				case 146:
				case 147:
				case 148:
				case 149:
				case 150:
				case 151:
				case 152:
				case 153:
				case 154:
				case 155:
				case 156:
				case 157:
				case 158:
				case 159:
				case 184:
				case 185:
				case 193:
				case 194:
				case 195:
				case 196:
				case 197:
				case 198:
				case 199:
				case 200:
				case 201:
				case 202:
				case 203:
				case 204:
				case 205:
				case 206:
				case 207:
				case 208:
				case 209:
				case 210:
				case 211:
				case 212:
				case 213:
				case 214:
				case 215:
				case 216:
				case 217:
				case 218:
				case 224:
				case 225:
				case 227:
				case 228:
				case 230:
				case 231:
				case 232:
				case 233:
				case 234:
				case 235:
				case 236:
				case 237:
				case 238:
				case 239:
				case 240:
				case 241:
				case 242:
				case 243:
				case 244:
				case 245:
					break;
				case 8:
					return "Back";
				case 9:
					return "Tab";
				case 10:
					return "LineFeed";
				case 12:
					return "Clear";
				case 13:
					return "Enter";
				case 16:
					return "ShiftKey";
				case 17:
					return "ControlKey";
				case 18:
					return "Menu";
				case 19:
					return "Pause";
				case 20:
					return "Capital";
				case 21:
					return "HanguelMode";
				case 23:
					return "JunjaMode";
				case 24:
					return "FinalMode";
				case 25:
					return "HanjaMode";
				case 27:
					return "Escape";
				case 28:
					return "IMEConvert";
				case 29:
					return "IMENonconvert";
				case 30:
					return "IMEAceept";
				case 31:
					return "IMEModeChange";
				case 32:
					return "Space";
				case 33:
					return "Prior";
				case 34:
					return "Next";
				case 35:
					return "End";
				case 36:
					return "Home";
				case 37:
					return "Left";
				case 38:
					return "Up";
				case 39:
					return "Right";
				case 40:
					return "Down";
				case 41:
					return "Select";
				case 42:
					return "Print";
				case 43:
					return "Execute";
				case 44:
					return "PrintScreen";
				case 45:
					return "Insert";
				case 46:
					return "Delete";
				case 47:
					return "Help";
				case 48:
					return "D0";
				case 49:
					return "D1";
				case 50:
					return "D2";
				case 51:
					return "D3";
				case 52:
					return "D4";
				case 53:
					return "D5";
				case 54:
					return "D6";
				case 55:
					return "D7";
				case 56:
					return "D8";
				case 57:
					return "D9";
				case 65:
					return "A";
				case 66:
					return "B";
				case 67:
					return "C";
				case 68:
					return "D";
				case 69:
					return "E";
				case 70:
					return "F";
				case 71:
					return "G";
				case 72:
					return "H";
				case 73:
					return "I";
				case 74:
					return "J";
				case 75:
					return "K";
				case 76:
					return "L";
				case 77:
					return "M";
				case 78:
					return "N";
				case 79:
					return "O";
				case 80:
					return "P";
				case 81:
					return "Q";
				case 82:
					return "R";
				case 83:
					return "S";
				case 84:
					return "T";
				case 85:
					return "U";
				case 86:
					return "V";
				case 87:
					return "W";
				case 88:
					return "X";
				case 89:
					return "Y";
				case 90:
					return "Z";
				case 91:
					return "LWin";
				case 92:
					return "RWin";
				case 93:
					return "Apps";
				case 96:
					return "NumPad0";
				case 97:
					return "NumPad1";
				case 98:
					return "NumPad2";
				case 99:
					return "NumPad3";
				case 100:
					return "NumPad4";
				case 101:
					return "NumPad5";
				case 102:
					return "NumPad6";
				case 103:
					return "NumPad7";
				case 104:
					return "NumPad8";
				case 105:
					return "NumPad9";
				case 106:
					return "Multiply";
				case 107:
					return "Add";
				case 108:
					return "Separator";
				case 109:
					return "Subtract";
				case 110:
					return "Decimal";
				case 111:
					return "Divide";
				case 112:
					return "F1";
				case 113:
					return "F2";
				case 114:
					return "F3";
				case 115:
					return "F4";
				case 116:
					return "F5";
				case 117:
					return "F6";
				case 118:
					return "F7";
				case 119:
					return "F8";
				case 120:
					return "F9";
				case 121:
					return "F10";
				case 122:
					return "F11";
				case 123:
					return "F12";
				case 124:
					return "F13";
				case 125:
					return "F14";
				case 126:
					return "F15";
				case 127:
					return "F16";
				case 128:
					return "F17";
				case 129:
					return "F18";
				case 130:
					return "F19";
				case 131:
					return "F20";
				case 132:
					return "F21";
				case 133:
					return "F22";
				case 134:
					return "F23";
				case 135:
					return "F24";
				case 144:
					return "NumLock";
				case 145:
					return "Scroll";
				case 160:
					return "LShift";
				case 161:
					return "RShift";
				case 162:
					return "LControl";
				case 163:
					return "RControl";
				case 164:
					return "LMenu";
				case 165:
					return "RMenu";
				case 166:
					return "BrowserBack";
				case 167:
					return "BrowserForward";
				case 168:
					return "BrowserRefresh";
				case 169:
					return "BrowserStop";
				case 170:
					return "BrowserSearch";
				case 171:
					return "BrowserFavorites";
				case 172:
					return "BrowserHome";
				case 173:
					return "VolumeMute";
				case 174:
					return "VolumeDown";
				case 175:
					return "VolumeUp";
				case 176:
					return "MediaNextTrack";
				case 177:
					return "MediaPreviousTrack";
				case 178:
					return "MediaStop";
				case 179:
					return "MediaPlayPause";
				case 180:
					return "LaunchMail";
				case 181:
					return "SelectMedia";
				case 182:
					return "LaunchApplication1";
				case 183:
					return "LaunchApplication2";
				case 186:
					return "OemSemicolon";
				case 187:
					return "Oemplus";
				case 188:
					return "OemComma";
				case 189:
					return "OemMinus";
				case 190:
					return "OemPeriod";
				case 191:
					return "OemQuestion";
				case 192:
					return "Oemtilde";
				case 219:
					return "OemOpenBrackets";
				case 220:
					return "OemPipe";
				case 221:
					return "OemCloseBrackets";
				case 222:
					return "OemQuotes";
				case 223:
					return "Oem8";
				case 226:
					return "OemBackslash";
				case 229:
					return "ProcessKey";
				case 246:
					return "Attn";
				case 247:
					return "Crsel";
				case 248:
					return "Exsel";
				case 249:
					return "EraseEof";
				case 250:
					return "Play";
				case 251:
					return "Zoom";
				case 252:
					return "NoName";
				case 253:
					return "Pa1";
				case 254:
					return "OemClear";
				default:
					switch (num)
					{
					case 65535:
						return "KeyCode";
					case 65536:
						return "Shift";
					}
					break;
				}
			}
			else
			{
				if (num == 131072)
				{
					return "Control";
				}
				if (num == 262144)
				{
					return "Alt";
				}
			}
			return value.ToString(CultureInfo.InvariantCulture).ToUpper();
		}
		public static string GetMicrosoftKeyName(int virtualKey)
		{
			return new KeysConverter().ConvertToString(virtualKey);
		}
	}
}
